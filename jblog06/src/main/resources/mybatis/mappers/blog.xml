<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blog">
   <insert id="insert" parameterType="blogvo">
   <![CDATA[
      insert into blog values(#{blogID}, #{title}, #{logoURL})
      ]]>
   </insert>
   
   <insert id="categoryInsert" parameterType="blogvo">
   <![CDATA[
      insert into category values(null, '기타', '',now(),#{blogID})
      ]]>
   </insert>
   
   <select id="findAll" parameterType="map" resultType="blogvo">
      <![CDATA[
         select id as blogID, title, logo as logoURL
         from blog
         where id = #{id}
      ]]>
   </select>
   
   <update id="update" parameterType="blogvo">
      <![CDATA[
         update blog set title = #{title}, logo = #{logoURL} 
         where id = #{blogID}
      ]]>
   </update>
   
   <select id="findCategory" parameterType="map" resultType="categoryvo">
      <![CDATA[
         select a.no as no, 
               a.name as name, 
               a.description as description,
               a.reg_date as regDate,
               a.id as blogID, 
               ifnull(count(b.no),0) as postNum
         from category as a left outer join post as b
            on a.no = b.category_no
         where id = #{id}
         group by a.no
         order by a.reg_date asc
      ]]>
   </select>
   
   <insert id="categoryAdd" parameterType="map">
   <![CDATA[
      insert into category values(null, #{name}, #{description},now(),#{blogID})
      ]]>
       <selectKey keyProperty = "no" resultType="long" order="AFTER">
		select last_insert_id()
	</selectKey>
   </insert>
   
   <delete id="categoryDel" parameterType="categoryvo">
      <![CDATA[
         delete from category where no = #{no}
      ]]>
   </delete>
   
   <insert id="post" parameterType="postvo">
   <![CDATA[
      insert into post values(null, #{title}, #{contents},now(),#{categoryNo})
      ]]>
   </insert>
   
   <select id="PostList" parameterType="map" resultType="postvo">
   <choose>
      <when test="categoryNo == 0 ">
         <![CDATA[
            select a.title as title, 
                  a.contents as contents,
                  a.reg_date as regDate,
                  b.no as categoryNo,
                  a.no as no
            from post as a, category as b
            where a.category_no = b.no
                 and b.id = #{id}
            order by a.reg_date desc
            limit 0,5
         ]]>      
      </when>
      <when test="categoryNo != 0">
         <![CDATA[
            select a.title as title, 
                  a.contents as contents,
                  a.reg_date as regDate,
                  b.no as categoryNo,
                  a.no as no
            from post as a, category as b
            where a.category_no = b.no
                 and b.id = #{id}
                 and a.category_no = #{categoryNo}
            order by a.reg_date desc
            limit 0,5
         ]]>
      </when>
   </choose>
   </select>
   
    <select id="findPost" parameterType="map" resultType="postvo">
    <choose>
    	<when test="postNo == 0 and categoryNo == 0">
    		<![CDATA[
	         select a.title, a.contents, a.reg_date, b.id, b.name, b.no
			from post a, category b
			where a.category_no = b.no
				  and b.id = #{id}
			order by a.reg_date desc
			limit 1;
      		]]>
    	</when>
    	<when test="postNo == 0 and categoryNo != 0">
    		<![CDATA[
	         select a.title, a.contents, a.reg_date, b.id, b.name, b.no
			from post a, category b
			where a.category_no = b.no
				  and b.id = #{id}
				  and a.category_no = #{categoryNo}
			order by a.reg_date desc
			limit 1;
      		]]>
    	</when>
    	<otherwise>
    		select a.title, a.contents, a.reg_date, b.id, b.name, b.no
			from post a, category b
			where a.category_no = b.no
				  and b.id = #{id}
				  and a.no = #{postNo}
			order by a.reg_date desc
    	</otherwise>
    </choose>
   </select>
</mapper>